<!DOCTYPE html>
<html>
<head>
  <title>Sansaku</title>
  <%= stylesheet_link_tag    "application", media: "all" %>
  <%= javascript_include_tag "application" %>
  <%= csrf_meta_tags %>
  
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css" />
  <script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"></script>

  <script src="http://maps.google.com/maps/api/js?sensor=true&language=ja"></script>

  <script>
/*global google, jQuery, console */
/*jslint browser:true */

var MAPRAMBLE = {};

// マップの初期中心位置
MAPRAMBLE.initial = {
  zoom: 15,
  lat: 40.823276,
  lng: 140.74527
};

// マップを初期化
MAPRAMBLE.initialize = function () {
  'use strict';
  // 表示領域の計算
  var viewportHeight = window.innerHeight ? window.innerHeight : jQuery(window).height();
  var mapHeight = viewportHeight;
  jQuery('#map').css('height', mapHeight);

  // Google Mapsの初期化
  MAPRAMBLE.createMap();
};
/*
MAPRAMBLE.setInitial = function () {
        console.log(MAPRAMBLE.initial);
};       
*/


// マップを生成
MAPRAMBLE.createMap = function () {
  'use strict';
  var centerLatLng, options;

  centerLatLng = new google.maps.LatLng(MAPRAMBLE.initial.lat, MAPRAMBLE.initial.lng);

  options = {
    zoom: this.initial.zoom, // 拡大率
    center: centerLatLng, // 表示の最初の中心
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  // Google Mapsをid="map"に生成
  MAPRAMBLE.map = new google.maps.Map(document.getElementById("mapCanvas"), options);
};
/*
 // マーカー群を追加
    MAPRAMBLE.addPlaceMarkers = function () {
        MAPRAMBLE.places.map(function (place) {
            MAPRAMBLE.addMarker(place);
        });
    };
*/
    // 位置マーカーを削除
    MAPRAMBLE.deleteLocationMarker = function () {
        if (MAPRAMBLE.hasOwnProperty('locationMarker')) {
            MAPRAMBLE.locationMarker.setMap(null);
        }
        if (MAPRAMBLE.hasOwnProperty('circle')) {
            MAPRAMBLE.circle.setMap(null);
        }
    };



MAPRAMBLE.getPlaces = function () {
  'use strict';
	/* seedのplace内のデータを取得 */
  jQuery.ajax({
    type: "GET",
    url: '/places.json',
    dataType: 'json'
  }).done(function (places) {
    places.map(function (place) {
      console.log(place.id);
      MAPRAMBLE.addMarker(place);
    });
  }).fail(function (jqXHR, textStatus) {
    console.log("fail");
    console.log(textStatus);
  });
};

MAPRAMBLE.addMarker = function (place) {
  'use strict';
  var marker, options;
    console.log(place);
    
    options = {
            position: new google.maps.LatLng(place.lat, place.lng),
            map: MAPRAMBLE.map
        };

    if (place.hasOwnProperty('lat') && place.hasOwnProperty('lng') && place.lat !== null && place.lng !== null) {
        options.icon = place.type.icon;
    
    }else if (place.hasOwnProperty('isLocation') && place.isLocation === true) {
           
                options.icon = "/assets/marker_location.png";
    }
   // マーカーの生成
    marker = new google.maps.Marker(options);


  // マーカーにイベントハンドラを設定
        if (place.hasOwnProperty('isLocation')) {
/*
            google.maps.event.addListener(marker, 'click', function () {
                $.mobile.changePage('/locations');
            });
*/
        } else {
            google.maps.event.addListener(marker, 'click', function () {
                return (function (id) {
                    $.mobile.changePage('/places/' + id);
                }(place.id));
            });
        }
/*
        // マーカーを配列に入れる
        if (place.hasOwnProperty('isLocation')) {
            MAPRAMBLE.locationMarker = marker;
        } else {
            MAPRAMBLE.markers.push(marker);
        }
*/
};

MAPRAMBLE.outputLocation = function (position, callback) {
        var output, location = {};
        MAPRAMBLE.attempts = 0;

        output = "あなたの位置が確認されました。\n\n";

        output += "緯度:" + position.coords.latitude + "\n";
        output += "経度:" + position.coords.longitude + "\n";
        output += "精度:" + position.coords.accuracy + "m\n";

        location.location = {};
        location.location.latitude = position.coords.latitude;
        location.location.longitude = position.coords.longitude;
        location.location.accuracy = position.coords.accuracy;

        if (position.coords.altitude) {
            output += "高度:" + position.coords.altitude + "m\n";
            location.location.altitude = position.coords.altitude;
        }
        if (position.coords.altitudeAccuracy) {
            output += "高度の精度:" + position.coords.altitudeAccuracy + "m\n";
            location.location.altitudeAccuracy = position.coords.altitudeAccuracy;
        }

        if (position.coords.heading) {
            output += "移動方向:" + position.coords.altitudeAccuracy + "度\n";
            location.location.heading = position.coords.heading;
        }
        if (position.coords.speed) {
            output += "移動速度:" + position.coords.speed + "m/s\n";
            location.location.speed = position.coords.speed;
        }

        output += "取得時刻:" + position.timestamp;
        if (typeof position.timestamp === "number") {
            location.location.timestamp = new Date(position.timestamp);
        } else {
            location.location.timestamp = position.timestamp;
        }

        console.log(output);
        location.location.latitude = 35.880736;
        location.location.longitude = 139.9103;
        location.location.accuracy = 65.0;

        MAPRAMBLE.location = {};
        MAPRAMBLE.location.lat = location.location.latitude;
        MAPRAMBLE.location.lng = location.location.longitude;
        MAPRAMBLE.location.accuracy = location.location.accuracy;

        $.ajax({
            type: "POST",
            url: "/locations.json",
            data: location,
            dataType: "json"
        }).done(function (data) {
            console.log('id=' + data.id);
            //MAPRAMBLE.location.id = data.id;
        });
        callback();
    };

    MAPRAMBLE.reportProblem = function (error, callback) {
        var message;
        switch (error.code) {
        case error.PERMISSION_DENIED:
            message = "位置情報にアクセスできません。";
            if (error.hasOwnProperty('message')) {
                message += error.message;
            }
            console.log(error.message);
            break;
        case error.POSITION_UNAVAILABLE:
            message = "位置情報が利用できません。";
            if (error.hasOwnProperty('message')) {
                message += error.message;
            }
            break;
        case error.TIMEOUT:
            MAPRAMBLE.attempts += 1;
            if (MAPRAMBLE.attempts < 3) {
                MAPRAMBLE.getLocation();
            } else {
                message = "位置情報にアクセスできませんでした。";
                if (error.hasOwnProperty('message')) {
                    message += error.message;
                }
            }
            break;
        default:
            console.log("Geolocationの定義されていないエラーが発生しました。");
            if (error.hasOwnProperty('message')) {
                message += error.message;
            }
            break;
        }
        console.log(message);
        alert(message);
        callback();
    };

MAPRAMBLE.getLocation = function (callback) {
        var geolocation, options;

        geolocation = window.navigator.geolocation;

        // W3C Geolocationに対応しているか
        if (geolocation) {
            options = {
                enableHighAccurary: true,
                timeout: 20000,
                maximumAge: 0
            };

            // 位置情報の取得を試行
            geolocation.getCurrentPosition(
                function (position) {
                    console.log('success');
                    MAPRAMBLE.outputLocation(position, callback);
                },
                function (error) {
                    console.log('fail');
                    MAPRAMBLE.reportProblem(error, callback);
                },
                options
            );
        } else {
            console.log('not available');
            console.log('ブラウザが位置情報に対応していません。');
            callback();
        }
    };

    MAPRAMBLE.watchPosition = function () {
        var geolocation, options, watchId;

        geolocation = window.navigator.geolocation;

        // W3C Geolocationに対応しているか
        if (geolocation) {
            options = {
                enableHighAccurary: true,
                timeout: 45000
            };

            // 位置情報の取得を試行
            watchId = geolocation.watchPosition(
                MAPRAMBLE.outputLocation,
                MAPRAMBLE.reportProblem,
                options
            );
        } else {
            console.log('ブラウザが位置情報に対応していません。');
        }
        return watchId;
    };

    // 現在位置マーカーを追加
    MAPRAMBLE.addLocationMarker = function () {
        var location = MAPRAMBLE.location;
        location.isLocation = true;
        MAPRAMBLE.addMarker(location);
    };

    // 現在位置をマップの中心に設定する
    MAPRAMBLE.setLocationCenter = function () {
        MAPRAMBLE.map.setCenter(new google.maps.LatLng(MAPRAMBLE.location.lat, MAPRAMBLE.location.lng));
    };


  // ボタンに帯するイベントハンドラの設定
    MAPRAMBLE.setEventHandler = function () {
        $('#calcRoute').click(function (event) {
            MAPRAMBLE.calcRoute();
            event.preventDefault();
        });

        $('#getLocation').click(function (event) {
            MAPRAMBLE.getLocation(function () {
                MAPRAMBLE.deleteLocationMarker();
                MAPRAMBLE.addLocationMarker();
                MAPRAMBLE.setLocationCenter();
            });
            event.preventDefault();

        });
    };

    MAPRAMBLE.setHeight = function () {
        var viewportHeight, mapHeight;
        viewportHeight = window.innerHeight || $(window).height();
        mapHeight = viewportHeight - $('#header').outerHeight() - 15 * 2;
        $('#mapCanvas').css('height', mapHeight);
        console.log('mapHeight: ' + mapHeight);
    };
/*
    MAPRAMBLE.calcRoute = function () {
        console.log('calcing');
        var options, request, pointsNumber, directionsService, place, origin, destination, waypoints, i;
        waypoints = [];
        pointsNumber = MAPRAMBLE.way_points.length;
        if (pointsNumber < 2) {
            console.log(pointsNumber);
            alert('ルートを求めるには、マイマップに少なくとも2点以上の場所を追加してください。');
        } else if (pointsNumber > 8) {
            console.log(pointsNumber);
            alert('ルートを求めるには、マイマップに登録する場所を8点以下にしてください。');
        } else {
            options = {
                map: MAPRAMBLE.map,
                suppressMarkers: true
            };

            directionsService = new google.maps.DirectionsService();
            MAPRAMBLE.directionsRenderer = new google.maps.DirectionsRenderer(options);

            place = MAPRAMBLE.places[MAPRAMBLE.way_points[0]];
            origin = new google.maps.LatLng(place.lat, place.lng);
            for (i = 1; i < pointsNumber - 1; i = i + 1) {
                place = MAPRAMBLE.places[MAPRAMBLE.way_points[i]];
                waypoints.push({ location: new google.maps.LatLng(place.lat, place.lng)});
            }
            place = MAPRAMBLE.places[MAPRAMBLE.way_points[pointsNumber - 1]];
            destination = new google.maps.LatLng(place.lat, place.lng);
            request = {
                origin: origin,
                destination: destination,
                waypoints: waypoints,
                travelMode: google.maps.DirectionsTravelMode.WALKING,
                optimizeWaypoints: true
            };
            directionsService.route(request, function (responce, status) {
                console.log(responce);
                if (status === google.maps.DirectionsStatus.OK) {
                    MAPRAMBLE.directionsRenderer.setDirections(responce);
                    console.log(responce.routes[0].waypoint_order);
                }
            });
        }
    };
*/

 // メイン・プログラム
    $(document).on('pageshow', "#map", function () {
        'use strict';
        // 位置情報取得の試行回数
        //MAPRAMBLE.attemps = 0;
        
        MAPRAMBLE.initialize();
        MAPRAMBLE.getPlaces();

        MAPRAMBLE.setHeight();
        MAPRAMBLE.setEventHandler();
        if (MAPRAMBLE.hasOwnProperty('location') === false) {
            MAPRAMBLE.getLocation(function () {
                MAPRAMBLE.addLocationMarker();
            });
        }

        //MAPRAMBLE.setInitial();
        //MAPRAMBLE.createMap();
        //MAPRAMBLE.addPlaceMarkers();
        
    });

</script>

<!--<style type="text/css">
        html, body { margin:0; padding:0; }
        #map { width:100%; height:100%; }
</style>
-->
</head>

<body>
  <div data-role="page" id="map">
    <div data-role="header" id="header">
      <div data-role="navbar">
        <ul>
          <li><a href="/home/index">ホーム</a></li>
          <li><a href="#" id="getLocation">現在位置</a></li>
          <li><a href="#" id="calcRoute">ルート探索</a></li>
        </ul>
      </div>
    </div>
    <div data-role="content" id="map_content">
      <div id="mapCanvas"></div>
    </div>
  </div>
</body>

</html>