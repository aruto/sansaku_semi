<!DOCTYPE html>
<html>
<head>
  <title>Sansaku</title>
  <%= stylesheet_link_tag    "application", media: "all" %>
  <%= javascript_include_tag "application" %>
  <%= csrf_meta_tags %>
  
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css" />
  <script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"></script>

  <script src="http://maps.google.com/maps/api/js?sensor=true&language=ja"></script>

  <script>
/*global google, jQuery, console */
/*jslint browser:true */

var MAPRAMBLE = {};
/*
// マップの初期中心位置
MAPRAMBLE.initial = {
  zoom: 15,
  lat: 40.823276,
  lng: 140.74527
};

// マップを初期化
MAPRAMBLE.initialize = function () {
  'use strict';
  // 表示領域の計算
  var viewportHeight = window.innerHeight ? window.innerHeight : jQuery(window).height();
  var mapHeight = viewportHeight;
  jQuery('#map').css('height', mapHeight);

  // Google Mapsの初期化
  MAPRAMBLE.createMap();
};
*/
MAPRAMBLE.setInitial = function () {
        MAPRAMBLE.console.log(MAPRAMBLE.initial);
};       



// マップを生成
MAPRAMBLE.createMap = function () {
  'use strict';
  var centerLatLng, options;

  centerLatLng = new google.maps.LatLng(MAPRAMBLE.initial.lat, MAPRAMBLE.initial.lng);

  options = {
    zoom: this.initial.zoom, // 拡大率
    center: centerLatLng, // 表示の最初の中心
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  // Google Mapsをid="map"に生成
  MAPRAMBLE.map = new google.maps.Map(document.getElementById("mapCanvas"), options);
};


MAPRAMBLE.getPlaces = function () {
  'use strict';
	/* seedのplace内のデータを取得 */
  jQuery.ajax({
    type: "GET",
    url: '/places.json',
    dataType: 'json'
  }).done(function (places) {
    places.map(function (place) {
      console.log(place.id);
      MAPRAMBLE.addMarker(place);
    });
  }).fail(function (jqXHR, textStatus) {
    console.log("fail");
    console.log(textStatus);
  });
};

MAPRAMBLE.addMarker = function (place) {
  'use strict';
  var marker, options;
  console.log(place);
  if (place.hasOwnProperty('lat') && place.hasOwnProperty('lng') && place.lat !== null && place.lng !== null) {
    options = {
        position: new google.maps.LatLng(place.lat, place.lng),
        map: MAPRAMBLE.map,
        icon: place.type.icon
    };

    // マーカーの生成
    marker = new google.maps.Marker(options);
  }

  // マーカーにイベントハンドラを設定
        if (place.hasOwnProperty('isLocation')) {
/*
            google.maps.event.addListener(marker, 'click', function () {
                $.mobile.changePage('/locations');
            });
*/
        } else {
            google.maps.event.addListener(marker, 'click', function () {
                return (function (id) {
                    $.mobile.changePage('/places/' + id);
                }(place.id));
            });
        }

};

  // ボタンに帯するイベントハンドラの設定
    MAPRAMBLE.setEventHandler = function () {
        $('#calcRoute').click(function (event) {
            MAPRAMBLE.calcRoute();
            event.preventDefault();
        });

        $('#getLocation').click(function (event) {
            MAPRAMBLE.getLocation(function () {
                MAPRAMBLE.deleteLocationMarker();
                MAPRAMBLE.addLocationMarker();
                MAPRAMBLE.setLocationCenter();
            });
            event.preventDefault();
        });
    };

    MAPRAMBLE.setHeight = function () {
        var viewportHeight, mapHeight;
        viewportHeight = window.innerHeight || $(window).height();
        mapHeight = viewportHeight - $('#header').outerHeight() - 15 * 2;
        $('#mapCanvas').css('height', mapHeight);
        MAPRAMBLE.console.log('mapHeight: ' + mapHeight);
    };


 // メイン・プログラム
    $(document).on('pageshow', "#map", function () {
        MAPRAMBLE.setHeight();
        MAPRAMBLE.setEventHandler();
        if (MAPRAMBLE.hasOwnProperty('location') === false) {
            MAPRAMBLE.getLocation(function () {
                MAPRAMBLE.addLocationMarker();
            });
        }
        MAPRAMBLE.setInitial();
        MAPRAMBLE.createMap();
        MAPRAMBLE.addPlaceMarkers();
    });

</script>

<!--<style type="text/css">
        html, body { margin:0; padding:0; }
        #map { width:100%; height:100%; }
</style>
-->
</head>

<body>
  <div data-role="page" id="map">
    <div data-role="header" id="header">
      <div data-role="navbar">
        <ul>
          <li><a href="/home/index">ホーム</a></li>
          <li><a href="#" id="getLocation">現在位置</a></li>
          <li><a href="#" id="calcRoute">ルート探索</a></li>
        </ul>
      </div>
    </div>
    <div data-role="content" id="map_content">
      <div id="mapCanvas"></div>
    </div>
  </div>
</body>

</html>